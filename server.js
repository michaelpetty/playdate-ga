const express = require('express');
const app = express();
const bodyParser = require('body-parser');
const PORT = process.env.PORT || 3000;

// database
const db = require('./models');

// bodyparser middleware
app.use(bodyParser.urlencoded({extended: true}));
app.use(bodyParser.json());

// serve static assets
app.use(express.static(__dirname + '/public'));

// test pets
// _id is hardcoded as a string, since _id will be auto-generated by mongoDB
const pets = [
  {
    _id: 'j4k41o10an',
    loginId: 1,
    name: 'Lucky',
    type: 'cat',
    age: 4,
    bio: `This is test data I don't know what you want from me`,
    img: './public/images/lucky.jpg',
    likes: ['ih9a0dz', '1km1vca9x0f'] // should create match with ih9a0dz
  },
  {
    _id: 'ih9a0dz',
    loginId: 2,
    name: 'Oreo',
    type: 'cat',
    age: 5,
    bio: `It was the 'blurst' of times?! You stupid monkey!`,
    img: './public/images/oreo.jpg',
    likes: ['j4k41o10an'] // should create a match
  },
  {
    _id: '0jdnbl1jaz',
    loginId: 3,
    name: 'Badger',
    type: 'dog',
    age: 3,
    bio: `I'm a doggo!`,
    img: './public/images/oreo.jpg',
    likes: [] // for testing when a pet has no liked pets
  },
  {
    _id: '1km1vca9x0f',
    loginId: 4,
    name: 'Moxie',
    type: 'dog',
    age: 4,
    bio: `Here's lookin' at you, kid.`,
    img: './public/images/moxie.jpg',
    likes: ['ih9a0dz'] // should not result in any matches
  }
];

// test matches
const matches = [
  {
    _id: '1k441z0',
    match: ['j4k41o10an', 'ih9a0dz'],
    chatId: '014lmb3'
  }
];

// test chat history
const chats = [
  {
    _id: '014lmb3',
    messages: [{
        _id: 'b19jcz7',
        senderId: 'j4k41o10an',
        time: 1555365744082,
        content: 'wut u doin?'
      },
      {
        _id: 'llm89z',
        senderId: 'ih9a0dz',
        time: 1555365936326,
        content: 'nm u?'
      }
    ]
  }
];

// root route
app.get('/', (req, res) => {
  res.sendFile('views/index.html', {root: __dirname});
});

// profile route


// chat route

// ------ API ROUTES ------
// GET index pets
app.get('/api/pets', (req, res) => {
  res.json(pets);
});

// GET index matches
app.get('/api/matches', (req, res) => {
  res.json(matches);
});

// GET index chats
app.get('/api/chats', (req, res) => {
  res.json(chats);
});



// start server
app.listen(PORT, () => console.log(`Server running on ${PORT}`));